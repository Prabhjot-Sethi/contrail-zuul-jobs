---

- name: include OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}.yaml"
    - "{{ ansible_os_family | lower }}.yaml"
    - "default.yaml"

- when:
    - cloud_orchestrator == 'openstack'
    - ansible_distribution == 'RedHat'
  block:
    - name: include OpenStack-specific repos
      include_vars: "{{ ansible_distribution | lower }}_openstack_{{ openstack_version }}.yaml"

    - name: add OpenStack repos to repos_add
      set_fact:
        repos_add: "{{ repos_add }} + {{ openstack_repos_add }}"

- when:
    - cloud_orchestrator == 'kubernetes'
    - ansible_distribution == 'RedHat'
  block:
    - name: include OpenShift-specific repos
      include_vars: '{{ ansible_distribution | lower }}_openshift_{{ openshift_version }}.yaml'

    - name: add OpenShift repos to repos_add
      set_fact:
        repos_add: '{{ repos_add }} + {{ openshift_repos_add }}'

- name: prepare centos
  block:
    - name: disable subscription-manager on RHEL
      command: subscription-manager config --rhsm.manage_repos=0
      when: 'ansible_distribution == "RedHat"'
    - name: remove the upstream yum repos
      yum_repository:
        name: "{{ item.name }}"
        file: "{{ item.file }}"
        state: absent
      with_items: "{{ repos_remove }}"
    - name: prepare local base yum mirror repo file
      yum_repository:
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        file: "{{ repos_file }}"
        baseurl: "{{ repos_baseurl }}/{{ item.repo }}"
        enabled: yes
        gpgcheck: no
      with_items: "{{ repos_add }}"
    - name: prepare epel mirror repo file
      yum_repository:
        name: epel-mirror
        description: CentOS epel mirror
        file: epel
        baseurl: "{{ repos_baseurl }}/epel"
        enabled: "{{ use_epel }}"
        gpgcheck: no
#    - name: prepare third party cache yum Nexus repo
#      yum_repository:
#      name: tpc-{{ item }}
#        description: Contrail third-party dependencies
#        file: tpc-{{ item }}
#        baseurl: "http://{{ nexus.fqdn }}/repository/{{ nexus_rpm_repo }}/{{ tpc_branch }}/{{ item }}/"
#        enabled: yes
#        gpgcheck: no
#      with_items:
#        - source
#        - binary
#      when: enable_tpc_repo
    - name: prepare tpc mirror repo file
      yum_repository:
        name: tpc
        description: Contrail third-party
        file: tpc
        baseurl: "{{ repos_baseurl }}/yum-tungsten-tpc"
        enabled: "{{ enable_tpc_repo }}"
        gpgcheck: no
  when: 'ansible_os_family == "RedHat"'
  become: yes
  become_user: root
