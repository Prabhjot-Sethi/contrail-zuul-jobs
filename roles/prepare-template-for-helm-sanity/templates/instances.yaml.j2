#jinja2: trim_blocks:False
provider_config:
  bms:
    ssh_user: root
    ssh_private_key: /root/.ssh/id_rsa
    domainsuffix: local

instances:
  {%- for host in (groups['control-plane'] + groups['data-plane']) | unique -%}
  {% set host_roles = [] -%}
  {% if host in groups['control-plane'] -%}
  {% set host_roles = host_roles + control_plane_roles -%}
  {% endif -%}
  {% if host in groups['data-plane'] -%}
  {% set host_roles = host_roles + data_plane_roles -%}
  {% endif %}
  {{ hostvars[host].inventory_hostname }}:
    provider: bms
    ip: '{{ hostvars[host].ansible_default_ipv4.address }}'
    roles:
      {% for role in host_roles -%}
      {{ role }}:
      {% endfor -%}
  {% endfor %}

contrail_configuration:
  AUTH_MODE: keystone
  AAA_MODE: rbac
  AGENT_MODE: kernel
  BGP_PORT: 1179
  CONTROLLER_NODES: "{{ hostvars[groups['control-plane'][0]].ansible_default_ipv4.address }}"
  CONTROL_NODES: "{{ hostvars[groups['control-plane'][0]].ansible_ens4.ipv4.address }}"
  CONFIG_DATABASE_NODEMGR__DEFAULTS__minimum_diskGB: 10
  DATABASE_NODEMGR__DEFAULTS__minimum_diskGB: 10

deployment:
    orchestrator: '{{ cloud_orchestrator }}'
    deployer: '{{ contrail_deployer }}'

orchestrator_configuration:
    keystone:
        version: v3
        password: password

test_configuration:
    image_web_server: {{ image_web_server }}
    use_project_scoped_token: True
    auth_port: 80
    auth_url: http://keystone.openstack.svc.cluster.local:80/v3
